第一步，为服务器端和客户端准备公钥、私钥

    # 生成服务端私钥
    openssl genrsa -out server.key 1024                *****************

    # 生成服务端公钥
    openssl rsa -in server.key -pubout -out server.pem
    
    
    // # 生成客户端私钥
    // openssl genrsa -out client.key 1024

    // # 生成客户端公钥
    // openssl rsa -in client.key -pubout -out client.pem


第二步，生成 CA 证书

    # 生成 CA 私钥
    openssl genrsa -out ca.key 1024

    # X.509 Certificate Signing Request (CSR) Management.
    openssl req -new -key ca.key -out ca.csr
    
    # X.509 Certificate Data Management.
    openssl x509 -req -in ca.csr -signkey ca.key -out ca.crt     *****************



    Organization Name (eg, company) [Internet Widgits Pty Ltd]: 
        后面生成客户端和服务器端证书的时候也需要填写，不要写成一样的！！！可以随意写如：My CA, My Server, My Client。

    Common Name (e.g. server FQDN or YOUR name) []: 
        这一项，是最后可以访问的域名，我这里为了方便测试，写成 localhost ，如果是为了给我的网站生成证书，需要写成 barretlee.com 。

第三步，生成服务端证书 和 客户端证书

    # 服务器端需要向 CA 机构申请签名证书，在申请签名证书之前依然是创建自己的 CSR 文件
    openssl req -new -key server.key -out server.csr
    # 向自己的 CA 机构申请证书，签名过程需要 CA 的证书和私钥参与，最终颁发一个带有 CA 签名的证书
    openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -in server.csr -out server.crt
    
    # client 端
    openssl req -new -key client.key -out client.csr
    # client 端到 CA 签名
    openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -in client.csr -out client.crt




    ### example.key example.crt ###

    ## example.key example.csr

    openssl req -new -newkey rsa:2048 -sha256 -nodes -out example_com.csr -keyout example_com.key -subj "/C=CN/ST=ShenZhen/L=ShenZhen/O=Example Inc./OU=Web Security/CN=localhost"

    ## example.crt [生成 csr 文件后，提供给 CA 机构，签署成功后，就会得到一個 example.crt 证书文件，SSL 证书文件获得后，就可以在 Nginx 配置文件里配置 HTTPS 了]

    openssl genrsa -out ca.key 1024
    openssl x509 -req -in example_com.csr -signkey ca.key -out example_com.crt

