bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 3 --topic liuzz-article


3个分区 3个副本


bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 2 --partitions 1 --topic liuzz-test-replication
1个分区 两个副本

副本也可以指定， 太厉害了,  比如集群有三台机器，replication-factor指定为2就是只在2台机器上创建记录

    查看分区在集群上的状态
    bin/kafka-topics.sh --describe --zookeeper localh2181 --topic mytopic


发送消息（没有指定分区，随机？？  有一定规则）

bin/kafka-console-producer.sh --broker-list localhost:9092 --topic liuzz-article
a
bin/kafka-console-producer.sh --broker-list localhost:9093 --topic liuzz-article
b
bin/kafka-console-producer.sh --broker-list localhost:9094 --topic liuzz-article
c

往集群follow机器上上发送消息是怎么同步所有的？


读取所有分区消息（Kafka 只能保证一个分区之内消息的有序性，并不能保证跨分区消息的有序性。）

bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic liuzz-article --from-beginning
b
c
a


--------------------------------------------------------------------------------------------------------------
????
bin/kafka-console-producer.sh --broker-list localhost:9092,localhost:9093,localhost:9094 --topic liuzz-article
1
2
3

bin/kafka-console-consumer.sh --bootstrap-server localhost:9092,localhost:9093,localhost:9094 --topic liuzz-article --from-beginning
c
1
b
3
a
2
-------------------------------------------------------


查看log内容
sh /Applications/kafka_2.11-1.1.0/bin/kafka-run-class.sh kafka.tools.DumpLogSegments --files /tmp/kafka-logs/liuzz-article-0/00000000000000000000.log  --print-data-log  



------------------------------------------------------- 9092 Leader
kafka-logs/liuzz-article-0
c
1

kafka-logs/liuzz-article-1
b
3

kafka-logs/liuzz-article-2
a
2
-------------------------------------------------------副本 9093 Follower
kafka-logs-1/liuzz-article-0
c
1

kafka-logs-1/liuzz-article-1
b
3

kafka-logs-1/liuzz-article-2
a
2
-------------------------------------------------------副本 9094 Follower
kafka-logs-2/liuzz-article-0
c
1

kafka-logs-2/liuzz-article-1
b
3

kafka-logs-2/liuzz-article-2
a
2
-------------------------------------------------------


        /**
        * 发送指定分区
        */
        public void sendMsgWithPartition() throws Exception {
            this.template.send("liuzz-article", 0, "0518", "boot3");
            latch2.await();
        }

        /**
        * 接受主题指定分区消息
        */
        @KafkaListener(topicPartitions = {@TopicPartition(topic = "liuzz-article", partitions = {"1"})})
        private void articleListener(ConsumerRecord<?, ?> cr) throws Exception {
            logger.info("【liuzz-article】{}", cr.toString());
            latch2.countDown();
        }





打印偏移量


sh /Applications/kafka_2.11-1.1.0/bin/kafka-run-class.sh kafka.tools.DumpLogSegments --files /private/tmp/kafka-logs/__consumer_offsets-0/00000000000000000000.log  --print-data-log


sh /Applications/kafka_2.11-1.1.0/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic __consumer_offsets --partition 1 --from-beginning --formatter "kafka.coordinator.group.GroupMetadataManager\$OffsetsMessageFormatter"









==== 集群

1、server.properties 设置集群副本数量
2、指定多ip:port

====











